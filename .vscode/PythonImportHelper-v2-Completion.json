[
    {
        "label": "config",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "config",
        "description": "config",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "telebot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "telebot",
        "description": "telebot",
        "detail": "telebot",
        "documentation": {}
    },
    {
        "label": "types",
        "importPath": "telebot",
        "description": "telebot",
        "isExtraImport": true,
        "detail": "telebot",
        "documentation": {}
    },
    {
        "label": "send_welcome",
        "kind": 2,
        "importPath": "bot",
        "description": "bot",
        "peekOfCode": "def send_welcome(message):\n    # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –®–∞–≥ 1 \n    markup_inline =types.InlineKeyboardMarkup(row_width=1)\n    btn_inline = types.InlineKeyboardButton(text=\" –ù–∞—á–∞—Ç—å \",callback_data = 'welcome')\n    markup_inline.add(btn_inline)\n    bot.send_message(message.chat.id, \" –ü—Ä–∏–≤–µ—Ç\" + message.from_user.first_name + br +  \"–†–∞—Å—Å–∫–∞–∂—É –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –ë–∏—Ç–∫–æ–π–Ω\"+ br +\"–Ø –∏—Å–ø–æ–ª—å–∑—É—é API bittrex\" + br +\"‚úÖ–¢—ã –≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∏—à—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ \",reply_markup=markup_inline)\n@bot.callback_query_handler(func=lambda call:True)\ndef btc(call):\n    if call.data== 'welcome':\n    # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –®–∞–≥ 1",
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "btc",
        "kind": 2,
        "importPath": "bot",
        "description": "bot",
        "peekOfCode": "def btc(call):\n    if call.data== 'welcome':\n    # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –®–∞–≥ 1\n        markup_inline_step_2 =types.InlineKeyboardMarkup(row_width=3)\n        btn_inline_step_2 = types.InlineKeyboardButton(text=\"üü°USD\\BTC\",callback_data = 'btc')\n        markup_inline_step_2.add(btn_inline_step_2)\n        bot.send_message(call.message.chat.id,\"‚úÖ–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–µ—Ç–µ —Ä–∞–∑–¥–µ–ª\",reply_markup = markup_inline_step_2)\n    # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –®–∞–≥ 2\n    if call.data ==\"btc\":\n        markup_inline_step_3 =types.InlineKeyboardMarkup(row_width=3)",
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "hel",
        "kind": 2,
        "importPath": "bot",
        "description": "bot",
        "peekOfCode": "def help (message):\n    bot.send_message(message.chat.id, \"–ü—Ä–∏–≤–µ—Çüëãüèª\" + message.from_user.first_name + \" –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å @S19S93 , –ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç API bittrex \")\nbot.polling()",
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "res",
        "kind": 5,
        "importPath": "bot",
        "description": "bot",
        "peekOfCode": "res = requests.get('https://api.bittrex.com/api/v1.1/public/getmarketsummary?market=USD-BTC').json()['result']\nprint(res)\nfor element in res :\n    print(element['Ask'])\nbtc_ask=element['Ask']\nbtc_bid = element['Bid']\nbtc_High = element['High']\nbtc_Low=element['Low']\nbtc_Volume=element['Volume']\nbtc_Last=element['Last']",
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "btc_bid",
        "kind": 5,
        "importPath": "bot",
        "description": "bot",
        "peekOfCode": "btc_bid = element['Bid']\nbtc_High = element['High']\nbtc_Low=element['Low']\nbtc_Volume=element['Volume']\nbtc_Last=element['Last']\nbtc_BaseVolume=element['BaseVolume']\nbtc_OpenBuyOrders=element['OpenBuyOrders']\nbtc_OpenSellOrders=element['OpenSellOrders']\nprint(btc_High)\nbr = '\\n'",
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "btc_High",
        "kind": 5,
        "importPath": "bot",
        "description": "bot",
        "peekOfCode": "btc_High = element['High']\nbtc_Low=element['Low']\nbtc_Volume=element['Volume']\nbtc_Last=element['Last']\nbtc_BaseVolume=element['BaseVolume']\nbtc_OpenBuyOrders=element['OpenBuyOrders']\nbtc_OpenSellOrders=element['OpenSellOrders']\nprint(btc_High)\nbr = '\\n'\n# –ù–∞—á–∞–ª–æ –ë–æ—Ç–∞ ",
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "br",
        "kind": 5,
        "importPath": "bot",
        "description": "bot",
        "peekOfCode": "br = '\\n'\n# –ù–∞—á–∞–ª–æ –ë–æ—Ç–∞ \nbot = telebot.TeleBot(config.token) \n@bot.message_handler(commands=['start'])\ndef send_welcome(message):\n    # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –®–∞–≥ 1 \n    markup_inline =types.InlineKeyboardMarkup(row_width=1)\n    btn_inline = types.InlineKeyboardButton(text=\" –ù–∞—á–∞—Ç—å \",callback_data = 'welcome')\n    markup_inline.add(btn_inline)\n    bot.send_message(message.chat.id, \" –ü—Ä–∏–≤–µ—Ç\" + message.from_user.first_name + br +  \"–†–∞—Å—Å–∫–∞–∂—É –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –ë–∏—Ç–∫–æ–π–Ω\"+ br +\"–Ø –∏—Å–ø–æ–ª—å–∑—É—é API bittrex\" + br +\"‚úÖ–¢—ã –≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∏—à—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ \",reply_markup=markup_inline)",
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "bot",
        "kind": 5,
        "importPath": "bot",
        "description": "bot",
        "peekOfCode": "bot = telebot.TeleBot(config.token) \n@bot.message_handler(commands=['start'])\ndef send_welcome(message):\n    # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –®–∞–≥ 1 \n    markup_inline =types.InlineKeyboardMarkup(row_width=1)\n    btn_inline = types.InlineKeyboardButton(text=\" –ù–∞—á–∞—Ç—å \",callback_data = 'welcome')\n    markup_inline.add(btn_inline)\n    bot.send_message(message.chat.id, \" –ü—Ä–∏–≤–µ—Ç\" + message.from_user.first_name + br +  \"–†–∞—Å—Å–∫–∞–∂—É –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –ë–∏—Ç–∫–æ–π–Ω\"+ br +\"–Ø –∏—Å–ø–æ–ª—å–∑—É—é API bittrex\" + br +\"‚úÖ–¢—ã –≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∏—à—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ \",reply_markup=markup_inline)\n@bot.callback_query_handler(func=lambda call:True)\ndef btc(call):",
        "detail": "bot",
        "documentation": {}
    },
    {
        "label": "token",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "token = '1816078297:AAEZUXys7zPzaGKCEFUWqAt5Jx-8OBrFpRQ'",
        "detail": "config",
        "documentation": {}
    }
]